---

- name: Register previously copied alert rules
  ansible.builtin.find:
    paths: "{{ prometheus_config_dir }}/rules"
    patterns:
      - "*.rules"
  register: __prometheus_present
  when: prometheus_alert_rules_sync

- name: alerting rules file
  template:
    src: "alert.rules.j2"
    dest: "{{ prometheus_config_dir }}/rules/ansible_managed.rules"
    owner: root
    group: prometheus
    mode: 0640
    validate: "{{ _prometheus_binary_install_dir }}/promtool check rules %s"
  when:
    - prometheus_alert_rules != []
  notify:
    - reload prometheus

- name: copy custom alerting rule files
  copy:
    src: "{{ item }}"
    dest: "{{ prometheus_config_dir }}/rules/{{ item | basename }}"
    owner: root
    group: prometheus
    mode: 0640
    validate: "{{ _prometheus_binary_install_dir }}/promtool check rules %s"
  with_fileglob: "{{ prometheus_alert_rules_files }}"
  register: __prometheus_copied
  notify:
    - reload prometheus

- name: Set list facts
  ansible.builtin.set_fact:
    __prometheus_present_list: "{{ __prometheus_present | json_query('files[*].path') | default([]) }}"
    __prometheus_copied_list: "{{ __prometheus_copied_tmp + __prometheus_copied_tmp_check + __prometheus_copied_ansible }}"
  vars:
    __prometheus_copied_tmp: "{{ __prometheus_copied.results | json_query('[*].dest') | default([]) }}"
    __prometheus_copied_tmp_check: "{{ __prometheus_copied.results | json_query('[*].invocation.dest') | default([]) }}"
    __prometheus_copied_ansible: "{{ [prometheus_config_dir + '/rules/ansible_managed.rules'] if prometheus_alert_rules else [] }}"
  when: prometheus_alert_rules_sync

- name: Remove alert rules not present on deployer machine
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  loop: "{{ __prometheus_present_list | difference(__prometheus_copied_list) }}"
  notify:
    - reload prometheus
  when: prometheus_alert_rules_sync

- name: configure prometheus
  template:
    src: "{{ prometheus_config_file }}"
    dest: "{{ prometheus_config_dir }}/prometheus.yml"
    force: true
    owner: root
    group: prometheus
    mode: 0640
    validate: "{{ _prometheus_binary_install_dir }}/promtool check config %s"
  notify:
    - reload prometheus

- name: configure Prometheus web
  copy:
    content: "{{ prometheus_web_config | to_nice_yaml(indent=2,sort_keys=False) }}"
    dest: "{{ prometheus_config_dir }}/web.yml"
    force: true
    owner: root
    group: prometheus
    mode: 0640

- name: configure prometheus static targets
  copy:
    content: |
      #jinja2: lstrip_blocks: True
      {{ item.value | to_nice_yaml(indent=2,sort_keys=False) }}
    dest: "{{ prometheus_config_dir }}/file_sd/{{ item.key }}.yml"
    force: true
    owner: root
    group: prometheus
    mode: 0640
  with_dict: "{{ prometheus_targets }}"
  when: prometheus_targets != {}

- name: copy prometheus custom static targets
  copy:
    src: "{{ item }}"
    dest: "{{ prometheus_config_dir }}/file_sd/"
    force: true
    owner: root
    group: prometheus
    mode: 0640
  with_fileglob: "{{ prometheus_static_targets_files }}"
